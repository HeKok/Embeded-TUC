
AnalogTest1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000420  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000494  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800060  00800060  00000494  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000494  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006f3  00000000  00000000  00000538  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000618  00000000  00000000  00000c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000054a  00000000  00000000  00001243  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  00001790  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000364  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000129  00000000  00000000  00001b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001cb9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 b8 01 	jmp	0x370	; 0x370 <__vector_14>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a8 36       	cpi	r26, 0x68	; 104
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 b3 01 	call	0x366	; 0x366 <main>
  74:	0c 94 0e 02 	jmp	0x41c	; 0x41c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <initialise1>:


void initialise1()
{
	//DDRA &= ~(1<<PA0 | 1<<PA1 | 1<<PA2 | 1<<PA3 | 1<<PA4 | 1<<PA5 | 1<<PA6 | 1<< PA7);
	DDRA &= ~(1<<PA0 | 1<<PA1 | 1<<PA2 | 1<<PA3);
  7c:	8a b3       	in	r24, 0x1a	; 26
  7e:	80 7f       	andi	r24, 0xF0	; 240
  80:	8a bb       	out	0x1a, r24	; 26
	ADCSRA = 0b10001011;
  82:	8b e8       	ldi	r24, 0x8B	; 139
  84:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0b01100000;
  86:	80 e6       	ldi	r24, 0x60	; 96
  88:	87 b9       	out	0x07, r24	; 7
	SFIOR = 0b00000000;
  8a:	10 be       	out	0x30, r1	; 48
	DDRB |= (1<<PB0 | 1<<PB1 | 1<<PB2 | 1<<PB3 | 1<<PB4 | 1<<PB5 | 1<<PB6 | 1<< PB7);
  8c:	87 b3       	in	r24, 0x17	; 23
  8e:	8f ef       	ldi	r24, 0xFF	; 255
  90:	87 bb       	out	0x17, r24	; 23
	
	//DDRD |= (1<<PD5 | 1<<PD4);
	
	DDRD |= (1<<PD5 | 1<<PD4);
  92:	81 b3       	in	r24, 0x11	; 17
  94:	80 63       	ori	r24, 0x30	; 48
  96:	81 bb       	out	0x11, r24	; 17
	TCCR1A |=(1<<COM1B1);
  98:	8f b5       	in	r24, 0x2f	; 47
  9a:	80 62       	ori	r24, 0x20	; 32
  9c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<WGM13 | CS11);
  9e:	8e b5       	in	r24, 0x2e	; 46
  a0:	81 61       	ori	r24, 0x11	; 17
  a2:	8e bd       	out	0x2e, r24	; 46
  a4:	08 95       	ret

000000a6 <PWM2>:

void PWM2()
{
	int note;
	
	if((P1>P2) && (P1>P) && (P1>R))
  a6:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <_edata>
  aa:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <_edata+0x1>
  ae:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <P2>
  b2:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <P2+0x1>
  b6:	82 17       	cp	r24, r18
  b8:	93 07       	cpc	r25, r19
  ba:	5c f5       	brge	.+86     	; 0x112 <PWM2+0x6c>
  bc:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <P>
  c0:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <P+0x1>
  c4:	42 17       	cp	r20, r18
  c6:	53 07       	cpc	r21, r19
  c8:	24 f5       	brge	.+72     	; 0x112 <PWM2+0x6c>
  ca:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <R>
  ce:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <R+0x1>
  d2:	62 17       	cp	r22, r18
  d4:	73 07       	cpc	r23, r19
  d6:	ec f4       	brge	.+58     	; 0x112 <PWM2+0x6c>
	{
		if((P2>P) && (P2>R))
  d8:	48 17       	cp	r20, r24
  da:	59 07       	cpc	r21, r25
  dc:	0c f0       	brlt	.+2      	; 0xe0 <PWM2+0x3a>
  de:	c4 c0       	rjmp	.+392    	; 0x268 <PWM2+0x1c2>
  e0:	68 17       	cp	r22, r24
  e2:	79 07       	cpc	r23, r25
  e4:	0c f0       	brlt	.+2      	; 0xe8 <PWM2+0x42>
  e6:	c6 c0       	rjmp	.+396    	; 0x274 <PWM2+0x1ce>
		{
			if(P>R)
  e8:	64 17       	cp	r22, r20
  ea:	75 07       	cpc	r23, r21
  ec:	0c f4       	brge	.+2      	; 0xf0 <PWM2+0x4a>
  ee:	80 c0       	rjmp	.+256    	; 0x1f0 <PWM2+0x14a>
			{
				note=0.4*G4+0.3*F4+0.2*C4+0.1*A4;
			}
			else
			{
				note=0.4*G4+0.3*F4+0.2*A4+0.1*C4;
  f0:	9e e4       	ldi	r25, 0x4E	; 78
  f2:	85 e0       	ldi	r24, 0x05	; 5
  f4:	ac c0       	rjmp	.+344    	; 0x24e <PWM2+0x1a8>
			}
		}
		else if((P>P2)&&(P>R))
		{
			if(P2>R)
  f6:	68 17       	cp	r22, r24
  f8:	79 07       	cpc	r23, r25
  fa:	0c f4       	brge	.+2      	; 0xfe <PWM2+0x58>
  fc:	7c c0       	rjmp	.+248    	; 0x1f6 <PWM2+0x150>
			{
				note=0.4*G4+0.3*C4+0.2*F4+0.1*A4;
			}
			else
			{
				note=0.4*G4+0.3*C4+0.2*A4+0.1*F4;
  fe:	9e ea       	ldi	r25, 0xAE	; 174
 100:	85 e0       	ldi	r24, 0x05	; 5
 102:	a5 c0       	rjmp	.+330    	; 0x24e <PWM2+0x1a8>
			}
		}
		else
		{
			if(P2>P)
 104:	48 17       	cp	r20, r24
 106:	59 07       	cpc	r21, r25
 108:	0c f4       	brge	.+2      	; 0x10c <PWM2+0x66>
 10a:	78 c0       	rjmp	.+240    	; 0x1fc <PWM2+0x156>
			{
				note=0.4*G4+0.3*A4+0.2*F4+0.1*C4;
			}
			else
			{
				note=0.4*G4+0.3*A4+0.2*C4+0.1*F4;
 10c:	90 e6       	ldi	r25, 0x60	; 96
 10e:	85 e0       	ldi	r24, 0x05	; 5
 110:	9e c0       	rjmp	.+316    	; 0x24e <PWM2+0x1a8>
			}
		}
	}
	else if ((P2>P1) && (P2>P) && (P2>R))
 112:	28 17       	cp	r18, r24
 114:	39 07       	cpc	r19, r25
 116:	0c f0       	brlt	.+2      	; 0x11a <PWM2+0x74>
 118:	01 c1       	rjmp	.+514    	; 0x31c <PWM2+0x276>
 11a:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <P>
 11e:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <P+0x1>
 122:	48 17       	cp	r20, r24
 124:	59 07       	cpc	r21, r25
 126:	0c f0       	brlt	.+2      	; 0x12a <PWM2+0x84>
 128:	f0 c0       	rjmp	.+480    	; 0x30a <PWM2+0x264>
 12a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <R>
 12e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <R+0x1>
 132:	68 17       	cp	r22, r24
 134:	79 07       	cpc	r23, r25
 136:	0c f0       	brlt	.+2      	; 0x13a <PWM2+0x94>
 138:	af c0       	rjmp	.+350    	; 0x298 <PWM2+0x1f2>
	{
		if((P1>P) && (P1>R))
 13a:	42 17       	cp	r20, r18
 13c:	53 07       	cpc	r21, r19
 13e:	0c f0       	brlt	.+2      	; 0x142 <PWM2+0x9c>
 140:	9f c0       	rjmp	.+318    	; 0x280 <PWM2+0x1da>
 142:	62 17       	cp	r22, r18
 144:	73 07       	cpc	r23, r19
 146:	0c f0       	brlt	.+2      	; 0x14a <PWM2+0xa4>
 148:	a1 c0       	rjmp	.+322    	; 0x28c <PWM2+0x1e6>
		{
			if(P>R)
 14a:	64 17       	cp	r22, r20
 14c:	75 07       	cpc	r23, r21
 14e:	0c f4       	brge	.+2      	; 0x152 <PWM2+0xac>
 150:	58 c0       	rjmp	.+176    	; 0x202 <PWM2+0x15c>
			{
				note=0.4*F4+0.3*G4+0.2*C4+0.1*A4;
			}
			else
			{
				note=0.4*F4+0.3*G4+0.2*A4+0.1*C4;
 152:	9d e5       	ldi	r25, 0x5D	; 93
 154:	85 e0       	ldi	r24, 0x05	; 5
 156:	7b c0       	rjmp	.+246    	; 0x24e <PWM2+0x1a8>
			}
		}
		else if((P>P1)&&(P>R))
		{
			if(P1>R)
 158:	62 17       	cp	r22, r18
 15a:	73 07       	cpc	r23, r19
 15c:	0c f4       	brge	.+2      	; 0x160 <PWM2+0xba>
 15e:	54 c0       	rjmp	.+168    	; 0x208 <PWM2+0x162>
			{
				note=0.4*F4+0.3*C4+0.2*G4+0.1*A4;
			}
			else
			{
				note=0.4*F4+0.3*C4+0.2*A4+0.1*G4;
 160:	9c ed       	ldi	r25, 0xDC	; 220
 162:	85 e0       	ldi	r24, 0x05	; 5
 164:	74 c0       	rjmp	.+232    	; 0x24e <PWM2+0x1a8>
			}
		}
		else
		{
			if(P1>P)
 166:	42 17       	cp	r20, r18
 168:	53 07       	cpc	r21, r19
 16a:	0c f4       	brge	.+2      	; 0x16e <PWM2+0xc8>
 16c:	50 c0       	rjmp	.+160    	; 0x20e <PWM2+0x168>
			{
				note=0.4*F4+0.3*A4+0.2*G4+0.1*C4;
			}
			else
			{
				note=0.4*F4+0.3*A4+0.2*C4+0.1*G4;
 16e:	9f e8       	ldi	r25, 0x8F	; 143
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	6d c0       	rjmp	.+218    	; 0x24e <PWM2+0x1a8>
			}
		}
	}
	else if ((P>P2) && (P>P1) && (P>R))
 174:	24 17       	cp	r18, r20
 176:	35 07       	cpc	r19, r21
 178:	0c f5       	brge	.+66     	; 0x1bc <PWM2+0x116>
 17a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <R>
 17e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <R+0x1>
 182:	64 17       	cp	r22, r20
 184:	75 07       	cpc	r23, r21
 186:	d4 f4       	brge	.+52     	; 0x1bc <PWM2+0x116>
	{
		if((P2>P1) && (P2>R))
 188:	28 17       	cp	r18, r24
 18a:	39 07       	cpc	r19, r25
 18c:	0c f0       	brlt	.+2      	; 0x190 <PWM2+0xea>
 18e:	89 c0       	rjmp	.+274    	; 0x2a2 <PWM2+0x1fc>
 190:	68 17       	cp	r22, r24
 192:	79 07       	cpc	r23, r25
 194:	0c f0       	brlt	.+2      	; 0x198 <PWM2+0xf2>
 196:	8c c0       	rjmp	.+280    	; 0x2b0 <PWM2+0x20a>
		{
			if(P1>R)
 198:	62 17       	cp	r22, r18
 19a:	73 07       	cpc	r23, r19
 19c:	dc f1       	brlt	.+118    	; 0x214 <PWM2+0x16e>
			{
				note=0.4*C4+0.3*F4+0.2*G4+0.1*A4;
			}
			else
			{
				note=0.4*C4+0.3*F4+0.2*A4+0.1*G4;
 19e:	9c e0       	ldi	r25, 0x0C	; 12
 1a0:	86 e0       	ldi	r24, 0x06	; 6
 1a2:	55 c0       	rjmp	.+170    	; 0x24e <PWM2+0x1a8>
			}
		}
		else if((P1>P2)&&(P1>R))
		{
			if(P2>R)
 1a4:	68 17       	cp	r22, r24
 1a6:	79 07       	cpc	r23, r25
 1a8:	c4 f1       	brlt	.+112    	; 0x21a <PWM2+0x174>
			{
				note=0.4*C4+0.3*G4+0.2*F4+0.1*A4;
			}
			else
			{
				note=0.4*C4+0.3*G4+0.2*A4+0.1*F4;
 1aa:	9d ee       	ldi	r25, 0xED	; 237
 1ac:	85 e0       	ldi	r24, 0x05	; 5
 1ae:	4f c0       	rjmp	.+158    	; 0x24e <PWM2+0x1a8>
			}
		}
		else
		{
			if(P2>P1)
 1b0:	28 17       	cp	r18, r24
 1b2:	39 07       	cpc	r19, r25
 1b4:	ac f1       	brlt	.+106    	; 0x220 <PWM2+0x17a>
			{
				note=0.4*C4+0.3*A4+0.2*F4+0.1*G4;
			}
			else
			{
				note=0.4*C4+0.3*A4+0.2*G4+0.1*F4;
 1b6:	9f ed       	ldi	r25, 0xDF	; 223
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	49 c0       	rjmp	.+146    	; 0x24e <PWM2+0x1a8>
			}
		}
	}
	else
	{
		if((P2>P1) && (P2>P))
 1bc:	28 17       	cp	r18, r24
 1be:	39 07       	cpc	r19, r25
 1c0:	0c f0       	brlt	.+2      	; 0x1c4 <PWM2+0x11e>
 1c2:	7d c0       	rjmp	.+250    	; 0x2be <PWM2+0x218>
 1c4:	48 17       	cp	r20, r24
 1c6:	59 07       	cpc	r21, r25
 1c8:	0c f0       	brlt	.+2      	; 0x1cc <PWM2+0x126>
 1ca:	80 c0       	rjmp	.+256    	; 0x2cc <PWM2+0x226>
		{
			if(P1>P)
 1cc:	42 17       	cp	r20, r18
 1ce:	53 07       	cpc	r21, r19
 1d0:	54 f1       	brlt	.+84     	; 0x226 <PWM2+0x180>
			{
				note=0.4*A4+0.3*F4+0.2*G4+0.1*C4;
			}
			else
			{
				note=0.4*A4+0.3*F4+0.2*C4+0.1*G4;
 1d2:	91 e7       	ldi	r25, 0x71	; 113
 1d4:	85 e0       	ldi	r24, 0x05	; 5
 1d6:	3b c0       	rjmp	.+118    	; 0x24e <PWM2+0x1a8>
			}
		}
		else if((P1>P2)&&(P1>P))
		{
			if(P2>P)
 1d8:	48 17       	cp	r20, r24
 1da:	59 07       	cpc	r21, r25
 1dc:	3c f1       	brlt	.+78     	; 0x22c <PWM2+0x186>
			{
				note=0.4*A4+0.3*G4+0.2*F4+0.1*C4;
			}
			else
			{
				note=0.4*A4+0.3*G4+0.2*C4+0.1*F4;
 1de:	92 e5       	ldi	r25, 0x52	; 82
 1e0:	85 e0       	ldi	r24, 0x05	; 5
 1e2:	35 c0       	rjmp	.+106    	; 0x24e <PWM2+0x1a8>
			}
		}
		else
		{
			if(P2>P1)
 1e4:	28 17       	cp	r18, r24
 1e6:	39 07       	cpc	r19, r25
 1e8:	24 f1       	brlt	.+72     	; 0x232 <PWM2+0x18c>
			{
				note=0.4*A4+0.3*C4+0.2*F4+0.1*G4;
			}
			else
			{
				note=0.4*A4+0.3*C4+0.2*G4+0.1*F4;
 1ea:	92 e9       	ldi	r25, 0x92	; 146
 1ec:	85 e0       	ldi	r24, 0x05	; 5
 1ee:	2f c0       	rjmp	.+94     	; 0x24e <PWM2+0x1a8>
	{
		if((P2>P) && (P2>R))
		{
			if(P>R)
			{
				note=0.4*G4+0.3*F4+0.2*C4+0.1*A4;
 1f0:	9b e9       	ldi	r25, 0x9B	; 155
 1f2:	85 e0       	ldi	r24, 0x05	; 5
 1f4:	2c c0       	rjmp	.+88     	; 0x24e <PWM2+0x1a8>
		}
		else if((P>P2)&&(P>R))
		{
			if(P2>R)
			{
				note=0.4*G4+0.3*C4+0.2*F4+0.1*A4;
 1f6:	9b ec       	ldi	r25, 0xCB	; 203
 1f8:	85 e0       	ldi	r24, 0x05	; 5
 1fa:	29 c0       	rjmp	.+82     	; 0x24e <PWM2+0x1a8>
		}
		else
		{
			if(P2>P)
			{
				note=0.4*G4+0.3*A4+0.2*F4+0.1*C4;
 1fc:	90 e3       	ldi	r25, 0x30	; 48
 1fe:	85 e0       	ldi	r24, 0x05	; 5
 200:	26 c0       	rjmp	.+76     	; 0x24e <PWM2+0x1a8>
	{
		if((P1>P) && (P1>R))
		{
			if(P>R)
			{
				note=0.4*F4+0.3*G4+0.2*C4+0.1*A4;
 202:	9b ea       	ldi	r25, 0xAB	; 171
 204:	85 e0       	ldi	r24, 0x05	; 5
 206:	23 c0       	rjmp	.+70     	; 0x24e <PWM2+0x1a8>
		}
		else if((P>P1)&&(P>R))
		{
			if(P1>R)
			{
				note=0.4*F4+0.3*C4+0.2*G4+0.1*A4;
 208:	9a ee       	ldi	r25, 0xEA	; 234
 20a:	85 e0       	ldi	r24, 0x05	; 5
 20c:	20 c0       	rjmp	.+64     	; 0x24e <PWM2+0x1a8>
		}
		else
		{
			if(P1>P)
			{
				note=0.4*F4+0.3*A4+0.2*G4+0.1*C4;
 20e:	9f e4       	ldi	r25, 0x4F	; 79
 210:	85 e0       	ldi	r24, 0x05	; 5
 212:	1d c0       	rjmp	.+58     	; 0x24e <PWM2+0x1a8>
	{
		if((P2>P1) && (P2>R))
		{
			if(P1>R)
			{
				note=0.4*C4+0.3*F4+0.2*G4+0.1*A4;
 214:	9a e1       	ldi	r25, 0x1A	; 26
 216:	86 e0       	ldi	r24, 0x06	; 6
 218:	1a c0       	rjmp	.+52     	; 0x24e <PWM2+0x1a8>
		}
		else if((P1>P2)&&(P1>R))
		{
			if(P2>R)
			{
				note=0.4*C4+0.3*G4+0.2*F4+0.1*A4;
 21a:	9b e0       	ldi	r25, 0x0B	; 11
 21c:	86 e0       	ldi	r24, 0x06	; 6
 21e:	17 c0       	rjmp	.+46     	; 0x24e <PWM2+0x1a8>
		}
		else
		{
			if(P2>P1)
			{
				note=0.4*C4+0.3*A4+0.2*F4+0.1*G4;
 220:	9f ee       	ldi	r25, 0xEF	; 239
 222:	85 e0       	ldi	r24, 0x05	; 5
 224:	14 c0       	rjmp	.+40     	; 0x24e <PWM2+0x1a8>
	{
		if((P2>P1) && (P2>P))
		{
			if(P1>P)
			{
				note=0.4*A4+0.3*F4+0.2*G4+0.1*C4;
 226:	92 e3       	ldi	r25, 0x32	; 50
 228:	85 e0       	ldi	r24, 0x05	; 5
 22a:	11 c0       	rjmp	.+34     	; 0x24e <PWM2+0x1a8>
		}
		else if((P1>P2)&&(P1>P))
		{
			if(P2>P)
			{
				note=0.4*A4+0.3*G4+0.2*F4+0.1*C4;
 22c:	92 e2       	ldi	r25, 0x22	; 34
 22e:	85 e0       	ldi	r24, 0x05	; 5
 230:	0e c0       	rjmp	.+28     	; 0x24e <PWM2+0x1a8>
		}
		else
		{
			if(P2>P1)
			{
				note=0.4*A4+0.3*C4+0.2*F4+0.1*G4;
 232:	91 ea       	ldi	r25, 0xA1	; 161
 234:	85 e0       	ldi	r24, 0x05	; 5
 236:	0b c0       	rjmp	.+22     	; 0x24e <PWM2+0x1a8>
			{
				note=0.4*G4+0.3*C4+0.2*F4+0.1*A4;
			}
			else
			{
				note=0.4*G4+0.3*C4+0.2*A4+0.1*F4;
 238:	9e ea       	ldi	r25, 0xAE	; 174
 23a:	85 e0       	ldi	r24, 0x05	; 5
 23c:	08 c0       	rjmp	.+16     	; 0x24e <PWM2+0x1a8>
			{
				note=0.4*F4+0.3*C4+0.2*G4+0.1*A4;
			}
			else
			{
				note=0.4*F4+0.3*C4+0.2*A4+0.1*G4;
 23e:	9c ed       	ldi	r25, 0xDC	; 220
 240:	85 e0       	ldi	r24, 0x05	; 5
 242:	05 c0       	rjmp	.+10     	; 0x24e <PWM2+0x1a8>
			{
				note=0.4*C4+0.3*G4+0.2*F4+0.1*A4;
			}
			else
			{
				note=0.4*C4+0.3*G4+0.2*A4+0.1*F4;
 244:	9d ee       	ldi	r25, 0xED	; 237
 246:	85 e0       	ldi	r24, 0x05	; 5
 248:	02 c0       	rjmp	.+4      	; 0x24e <PWM2+0x1a8>
			{
				note=0.4*A4+0.3*G4+0.2*F4+0.1*C4;
			}
			else
			{
				note=0.4*A4+0.3*G4+0.2*C4+0.1*F4;
 24a:	92 e5       	ldi	r25, 0x52	; 82
 24c:	85 e0       	ldi	r24, 0x05	; 5
			{
				note=0.4*A4+0.3*C4+0.2*G4+0.1*F4;
			}
		}
	}
	ICR1H = (note >> 8); //first set the high byte
 24e:	87 bd       	out	0x27, r24	; 39
	ICR1L = note;        //now the low byte
 250:	96 bd       	out	0x26, r25	; 38
	OCR1B = 500;
 252:	84 ef       	ldi	r24, 0xF4	; 244
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	99 bd       	out	0x29, r25	; 41
 258:	88 bd       	out	0x28, r24	; 40
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25a:	8f e0       	ldi	r24, 0x0F	; 15
 25c:	97 e2       	ldi	r25, 0x27	; 39
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	f1 f7       	brne	.-4      	; 0x25e <PWM2+0x1b8>
 262:	00 c0       	rjmp	.+0      	; 0x264 <PWM2+0x1be>
 264:	00 00       	nop
	_delay_ms(10);
}
 266:	08 95       	ret
			else
			{
				note=0.4*G4+0.3*F4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P2)&&(P>R))
 268:	84 17       	cp	r24, r20
 26a:	95 07       	cpc	r25, r21
 26c:	b4 f1       	brlt	.+108    	; 0x2da <PWM2+0x234>
			{
				note=0.4*G4+0.3*A4+0.2*F4+0.1*C4;
			}
			else
			{
				note=0.4*G4+0.3*A4+0.2*C4+0.1*F4;
 26e:	90 e6       	ldi	r25, 0x60	; 96
 270:	85 e0       	ldi	r24, 0x05	; 5
 272:	ed cf       	rjmp	.-38     	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*G4+0.3*F4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P2)&&(P>R))
 274:	84 17       	cp	r24, r20
 276:	95 07       	cpc	r25, r21
 278:	bc f1       	brlt	.+110    	; 0x2e8 <PWM2+0x242>
		}
		else
		{
			if(P2>P)
			{
				note=0.4*G4+0.3*A4+0.2*F4+0.1*C4;
 27a:	90 e3       	ldi	r25, 0x30	; 48
 27c:	85 e0       	ldi	r24, 0x05	; 5
 27e:	e7 cf       	rjmp	.-50     	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*F4+0.3*G4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P1)&&(P>R))
 280:	24 17       	cp	r18, r20
 282:	35 07       	cpc	r19, r21
 284:	b4 f1       	brlt	.+108    	; 0x2f2 <PWM2+0x24c>
			{
				note=0.4*F4+0.3*A4+0.2*G4+0.1*C4;
			}
			else
			{
				note=0.4*F4+0.3*A4+0.2*C4+0.1*G4;
 286:	9f e8       	ldi	r25, 0x8F	; 143
 288:	85 e0       	ldi	r24, 0x05	; 5
 28a:	e1 cf       	rjmp	.-62     	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*F4+0.3*G4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P1)&&(P>R))
 28c:	24 17       	cp	r18, r20
 28e:	35 07       	cpc	r19, r21
 290:	bc f1       	brlt	.+110    	; 0x300 <PWM2+0x25a>
		}
		else
		{
			if(P1>P)
			{
				note=0.4*F4+0.3*A4+0.2*G4+0.1*C4;
 292:	9f e4       	ldi	r25, 0x4F	; 79
 294:	85 e0       	ldi	r24, 0x05	; 5
 296:	db cf       	rjmp	.-74     	; 0x24e <PWM2+0x1a8>
			{
				note=0.4*F4+0.3*A4+0.2*C4+0.1*G4;
			}
		}
	}
	else if ((P>P2) && (P>P1) && (P>R))
 298:	84 17       	cp	r24, r20
 29a:	95 07       	cpc	r25, r21
 29c:	0c f4       	brge	.+2      	; 0x2a0 <PWM2+0x1fa>
 29e:	46 c0       	rjmp	.+140    	; 0x32c <PWM2+0x286>
 2a0:	95 cf       	rjmp	.-214    	; 0x1cc <PWM2+0x126>
			else
			{
				note=0.4*C4+0.3*F4+0.2*A4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>R))
 2a2:	82 17       	cp	r24, r18
 2a4:	93 07       	cpc	r25, r19
 2a6:	0c f4       	brge	.+2      	; 0x2aa <PWM2+0x204>
 2a8:	46 c0       	rjmp	.+140    	; 0x336 <PWM2+0x290>
			{
				note=0.4*C4+0.3*A4+0.2*F4+0.1*G4;
			}
			else
			{
				note=0.4*C4+0.3*A4+0.2*G4+0.1*F4;
 2aa:	9f ed       	ldi	r25, 0xDF	; 223
 2ac:	85 e0       	ldi	r24, 0x05	; 5
 2ae:	cf cf       	rjmp	.-98     	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*C4+0.3*F4+0.2*A4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>R))
 2b0:	82 17       	cp	r24, r18
 2b2:	93 07       	cpc	r25, r19
 2b4:	0c f4       	brge	.+2      	; 0x2b8 <PWM2+0x212>
 2b6:	46 c0       	rjmp	.+140    	; 0x344 <PWM2+0x29e>
		}
		else
		{
			if(P2>P1)
			{
				note=0.4*C4+0.3*A4+0.2*F4+0.1*G4;
 2b8:	9f ee       	ldi	r25, 0xEF	; 239
 2ba:	85 e0       	ldi	r24, 0x05	; 5
 2bc:	c8 cf       	rjmp	.-112    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*A4+0.3*F4+0.2*C4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>P))
 2be:	82 17       	cp	r24, r18
 2c0:	93 07       	cpc	r25, r19
 2c2:	0c f4       	brge	.+2      	; 0x2c6 <PWM2+0x220>
 2c4:	44 c0       	rjmp	.+136    	; 0x34e <PWM2+0x2a8>
			{
				note=0.4*A4+0.3*C4+0.2*F4+0.1*G4;
			}
			else
			{
				note=0.4*A4+0.3*C4+0.2*G4+0.1*F4;
 2c6:	92 e9       	ldi	r25, 0x92	; 146
 2c8:	85 e0       	ldi	r24, 0x05	; 5
 2ca:	c1 cf       	rjmp	.-126    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*A4+0.3*F4+0.2*C4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>P))
 2cc:	82 17       	cp	r24, r18
 2ce:	93 07       	cpc	r25, r19
 2d0:	0c f4       	brge	.+2      	; 0x2d4 <PWM2+0x22e>
 2d2:	44 c0       	rjmp	.+136    	; 0x35c <PWM2+0x2b6>
		}
		else
		{
			if(P2>P1)
			{
				note=0.4*A4+0.3*C4+0.2*F4+0.1*G4;
 2d4:	91 ea       	ldi	r25, 0xA1	; 161
 2d6:	85 e0       	ldi	r24, 0x05	; 5
 2d8:	ba cf       	rjmp	.-140    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*G4+0.3*F4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P2)&&(P>R))
 2da:	64 17       	cp	r22, r20
 2dc:	75 07       	cpc	r23, r21
 2de:	0c f4       	brge	.+2      	; 0x2e2 <PWM2+0x23c>
 2e0:	0a cf       	rjmp	.-492    	; 0xf6 <PWM2+0x50>
			{
				note=0.4*G4+0.3*A4+0.2*F4+0.1*C4;
			}
			else
			{
				note=0.4*G4+0.3*A4+0.2*C4+0.1*F4;
 2e2:	90 e6       	ldi	r25, 0x60	; 96
 2e4:	85 e0       	ldi	r24, 0x05	; 5
 2e6:	b3 cf       	rjmp	.-154    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*G4+0.3*F4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P2)&&(P>R))
 2e8:	64 17       	cp	r22, r20
 2ea:	75 07       	cpc	r23, r21
 2ec:	0c f4       	brge	.+2      	; 0x2f0 <PWM2+0x24a>
 2ee:	a4 cf       	rjmp	.-184    	; 0x238 <PWM2+0x192>
 2f0:	09 cf       	rjmp	.-494    	; 0x104 <PWM2+0x5e>
			else
			{
				note=0.4*F4+0.3*G4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P1)&&(P>R))
 2f2:	64 17       	cp	r22, r20
 2f4:	75 07       	cpc	r23, r21
 2f6:	0c f4       	brge	.+2      	; 0x2fa <PWM2+0x254>
 2f8:	2f cf       	rjmp	.-418    	; 0x158 <PWM2+0xb2>
			{
				note=0.4*F4+0.3*A4+0.2*G4+0.1*C4;
			}
			else
			{
				note=0.4*F4+0.3*A4+0.2*C4+0.1*G4;
 2fa:	9f e8       	ldi	r25, 0x8F	; 143
 2fc:	85 e0       	ldi	r24, 0x05	; 5
 2fe:	a7 cf       	rjmp	.-178    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*F4+0.3*G4+0.2*A4+0.1*C4;
			}
		}
		else if((P>P1)&&(P>R))
 300:	64 17       	cp	r22, r20
 302:	75 07       	cpc	r23, r21
 304:	0c f4       	brge	.+2      	; 0x308 <PWM2+0x262>
 306:	9b cf       	rjmp	.-202    	; 0x23e <PWM2+0x198>
 308:	2e cf       	rjmp	.-420    	; 0x166 <PWM2+0xc0>
			{
				note=0.4*F4+0.3*A4+0.2*C4+0.1*G4;
			}
		}
	}
	else if ((P>P2) && (P>P1) && (P>R))
 30a:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <P>
 30e:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <P+0x1>
 312:	84 17       	cp	r24, r20
 314:	95 07       	cpc	r25, r21
 316:	0c f4       	brge	.+2      	; 0x31a <PWM2+0x274>
 318:	2d cf       	rjmp	.-422    	; 0x174 <PWM2+0xce>
 31a:	d8 cf       	rjmp	.-80     	; 0x2cc <PWM2+0x226>
 31c:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <P>
 320:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <P+0x1>
 324:	84 17       	cp	r24, r20
 326:	95 07       	cpc	r25, r21
 328:	54 f6       	brge	.-108    	; 0x2be <PWM2+0x218>
 32a:	24 cf       	rjmp	.-440    	; 0x174 <PWM2+0xce>
 32c:	24 17       	cp	r18, r20
 32e:	35 07       	cpc	r19, r21
 330:	0c f4       	brge	.+2      	; 0x334 <PWM2+0x28e>
 332:	23 cf       	rjmp	.-442    	; 0x17a <PWM2+0xd4>
 334:	4b cf       	rjmp	.-362    	; 0x1cc <PWM2+0x126>
			else
			{
				note=0.4*C4+0.3*F4+0.2*A4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>R))
 336:	62 17       	cp	r22, r18
 338:	73 07       	cpc	r23, r19
 33a:	0c f4       	brge	.+2      	; 0x33e <PWM2+0x298>
 33c:	33 cf       	rjmp	.-410    	; 0x1a4 <PWM2+0xfe>
			{
				note=0.4*C4+0.3*A4+0.2*F4+0.1*G4;
			}
			else
			{
				note=0.4*C4+0.3*A4+0.2*G4+0.1*F4;
 33e:	9f ed       	ldi	r25, 0xDF	; 223
 340:	85 e0       	ldi	r24, 0x05	; 5
 342:	85 cf       	rjmp	.-246    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*C4+0.3*F4+0.2*A4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>R))
 344:	62 17       	cp	r22, r18
 346:	73 07       	cpc	r23, r19
 348:	0c f4       	brge	.+2      	; 0x34c <PWM2+0x2a6>
 34a:	7c cf       	rjmp	.-264    	; 0x244 <PWM2+0x19e>
 34c:	31 cf       	rjmp	.-414    	; 0x1b0 <PWM2+0x10a>
			else
			{
				note=0.4*A4+0.3*F4+0.2*C4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>P))
 34e:	42 17       	cp	r20, r18
 350:	53 07       	cpc	r21, r19
 352:	0c f4       	brge	.+2      	; 0x356 <PWM2+0x2b0>
 354:	41 cf       	rjmp	.-382    	; 0x1d8 <PWM2+0x132>
			{
				note=0.4*A4+0.3*C4+0.2*F4+0.1*G4;
			}
			else
			{
				note=0.4*A4+0.3*C4+0.2*G4+0.1*F4;
 356:	92 e9       	ldi	r25, 0x92	; 146
 358:	85 e0       	ldi	r24, 0x05	; 5
 35a:	79 cf       	rjmp	.-270    	; 0x24e <PWM2+0x1a8>
			else
			{
				note=0.4*A4+0.3*F4+0.2*C4+0.1*G4;
			}
		}
		else if((P1>P2)&&(P1>P))
 35c:	42 17       	cp	r20, r18
 35e:	53 07       	cpc	r21, r19
 360:	0c f4       	brge	.+2      	; 0x364 <PWM2+0x2be>
 362:	73 cf       	rjmp	.-282    	; 0x24a <PWM2+0x1a4>
 364:	3f cf       	rjmp	.-386    	; 0x1e4 <PWM2+0x13e>

00000366 <main>:
}*/

int main(void)
{
	
	initialise1();
 366:	0e 94 3e 00 	call	0x7c	; 0x7c <initialise1>
	
	sei();
 36a:	78 94       	sei
	
	ADCSRA |= (1<<ADSC);
 36c:	36 9a       	sbi	0x06, 6	; 6
 36e:	ff cf       	rjmp	.-2      	; 0x36e <main+0x8>

00000370 <__vector_14>:
}



ISR(ADC_vect)
{
 370:	1f 92       	push	r1
 372:	0f 92       	push	r0
 374:	0f b6       	in	r0, 0x3f	; 63
 376:	0f 92       	push	r0
 378:	11 24       	eor	r1, r1
 37a:	2f 93       	push	r18
 37c:	3f 93       	push	r19
 37e:	4f 93       	push	r20
 380:	5f 93       	push	r21
 382:	6f 93       	push	r22
 384:	7f 93       	push	r23
 386:	8f 93       	push	r24
 388:	9f 93       	push	r25
 38a:	af 93       	push	r26
 38c:	bf 93       	push	r27
 38e:	ef 93       	push	r30
 390:	ff 93       	push	r31
		
		if(ADMUX==0b01100000)
 392:	87 b1       	in	r24, 0x07	; 7
 394:	80 36       	cpi	r24, 0x60	; 96
 396:	49 f4       	brne	.+18     	; 0x3aa <__vector_14+0x3a>
		{
			P=ADCH;
 398:	85 b1       	in	r24, 0x05	; 5
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <P+0x1>
 3a0:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <P>
			ADMUX = 0b01100001;
 3a4:	81 e6       	ldi	r24, 0x61	; 97
 3a6:	87 b9       	out	0x07, r24	; 7
 3a8:	23 c0       	rjmp	.+70     	; 0x3f0 <__vector_14+0x80>
		}
		else if (ADMUX==0b01100001)
 3aa:	87 b1       	in	r24, 0x07	; 7
 3ac:	81 36       	cpi	r24, 0x61	; 97
 3ae:	49 f4       	brne	.+18     	; 0x3c2 <__vector_14+0x52>
		{
			R=ADCH;
 3b0:	85 b1       	in	r24, 0x05	; 5
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <R+0x1>
 3b8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <R>
			ADMUX = 0b01100010;
 3bc:	82 e6       	ldi	r24, 0x62	; 98
 3be:	87 b9       	out	0x07, r24	; 7
 3c0:	17 c0       	rjmp	.+46     	; 0x3f0 <__vector_14+0x80>
		}
		else if (ADMUX==0b01100010)
 3c2:	87 b1       	in	r24, 0x07	; 7
 3c4:	82 36       	cpi	r24, 0x62	; 98
 3c6:	49 f4       	brne	.+18     	; 0x3da <__vector_14+0x6a>
		{
			P1=ADCH;
 3c8:	85 b1       	in	r24, 0x05	; 5
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_edata+0x1>
 3d0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
			ADMUX = 0b01100011;
 3d4:	83 e6       	ldi	r24, 0x63	; 99
 3d6:	87 b9       	out	0x07, r24	; 7
 3d8:	0b c0       	rjmp	.+22     	; 0x3f0 <__vector_14+0x80>
		}
		else if (ADMUX==0b01100011)
 3da:	87 b1       	in	r24, 0x07	; 7
 3dc:	83 36       	cpi	r24, 0x63	; 99
 3de:	41 f4       	brne	.+16     	; 0x3f0 <__vector_14+0x80>
		{
			P2=ADCH;
 3e0:	85 b1       	in	r24, 0x05	; 5
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <P2+0x1>
 3e8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <P2>
			ADMUX = 0b01100000;
 3ec:	80 e6       	ldi	r24, 0x60	; 96
 3ee:	87 b9       	out	0x07, r24	; 7
		}
		//PWMinit();
		PWM2();
 3f0:	0e 94 53 00 	call	0xa6	; 0xa6 <PWM2>
		PORTB=0xFF;
 3f4:	8f ef       	ldi	r24, 0xFF	; 255
 3f6:	88 bb       	out	0x18, r24	; 24
		ADCSRA |= (1<<ADSC);
 3f8:	36 9a       	sbi	0x06, 6	; 6
	
}
 3fa:	ff 91       	pop	r31
 3fc:	ef 91       	pop	r30
 3fe:	bf 91       	pop	r27
 400:	af 91       	pop	r26
 402:	9f 91       	pop	r25
 404:	8f 91       	pop	r24
 406:	7f 91       	pop	r23
 408:	6f 91       	pop	r22
 40a:	5f 91       	pop	r21
 40c:	4f 91       	pop	r20
 40e:	3f 91       	pop	r19
 410:	2f 91       	pop	r18
 412:	0f 90       	pop	r0
 414:	0f be       	out	0x3f, r0	; 63
 416:	0f 90       	pop	r0
 418:	1f 90       	pop	r1
 41a:	18 95       	reti

0000041c <_exit>:
 41c:	f8 94       	cli

0000041e <__stop_program>:
 41e:	ff cf       	rjmp	.-2      	; 0x41e <__stop_program>
