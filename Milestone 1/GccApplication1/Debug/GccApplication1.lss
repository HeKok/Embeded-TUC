
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005f8  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000555  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000275  00000000  00000000  00000d55  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  00000fcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000317  00000000  00000000  00001054  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c1  00000000  00000000  0000136b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000142c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_1>
   8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__vector_2>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_6>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/interrupt.h>
#include <util/delay.h>

int main (void)
{
	DDRD &= ~(1<<PD2);
  6c:	8a 98       	cbi	0x11, 2	; 17
	DDRD &= ~(1<<PD3);
  6e:	8b 98       	cbi	0x11, 3	; 17
	DDRB &= ~(1<<PB2);
  70:	ba 98       	cbi	0x17, 2	; 23
	
	DDRB |= (1<<PB0);
  72:	b8 9a       	sbi	0x17, 0	; 23
	
	TCCR1A = 0b00000000;
  74:	1f bc       	out	0x2f, r1	; 47
	TIMSK = 0b00010000;
  76:	80 e1       	ldi	r24, 0x10	; 16
  78:	89 bf       	out	0x39, r24	; 57
	//TIFR = 0b00010000;
	TCCR1B = 0b00001000;
  7a:	88 e0       	ldi	r24, 0x08	; 8
  7c:	8e bd       	out	0x2e, r24	; 46
	//OCR1AH = 0b00000110;
	//OCR1AL = 0b00000000;
	//OCR1AH = 
	//OCR1AL =
	
	GICR |= 0b11000000;
  7e:	8b b7       	in	r24, 0x3b	; 59
  80:	80 6c       	ori	r24, 0xC0	; 192
  82:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= 0b00000101;
  84:	85 b7       	in	r24, 0x35	; 53
  86:	85 60       	ori	r24, 0x05	; 5
  88:	85 bf       	out	0x35, r24	; 53
	
	sei();
  8a:	78 94       	sei
	
	PORTB |= (1<<PB0);
  8c:	c0 9a       	sbi	0x18, 0	; 24
  8e:	ff cf       	rjmp	.-2      	; 0x8e <main+0x22>

00000090 <__vector_1>:
	return 0;
	
}

ISR(INT0_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
	if(PINB & (1<<PB2))
  9c:	b2 9b       	sbis	0x16, 2	; 22
  9e:	07 c0       	rjmp	.+14     	; 0xae <__vector_1+0x1e>
	{
		OCR1AH = 0b00000011;
  a0:	83 e0       	ldi	r24, 0x03	; 3
  a2:	8b bd       	out	0x2b, r24	; 43
		OCR1AL = 0b11010001;
  a4:	81 ed       	ldi	r24, 0xD1	; 209
  a6:	8a bd       	out	0x2a, r24	; 42
		TCCR1B = 0b00001101;
  a8:	8d e0       	ldi	r24, 0x0D	; 13
  aa:	8e bd       	out	0x2e, r24	; 46
  ac:	05 c0       	rjmp	.+10     	; 0xb8 <__vector_1+0x28>
		//PORTB ^= (1<<PB0);
	}
	else
	{
		OCR1AH = 0b00010011;
  ae:	83 e1       	ldi	r24, 0x13	; 19
  b0:	8b bd       	out	0x2b, r24	; 43
		OCR1AL = 0b00010011;
  b2:	8a bd       	out	0x2a, r24	; 42
		TCCR1B = 0b00001101;
  b4:	8d e0       	ldi	r24, 0x0D	; 13
  b6:	8e bd       	out	0x2e, r24	; 46
		//PORTB ^= (1<<PB0);
	}
}
  b8:	8f 91       	pop	r24
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <__vector_2>:

ISR(INT1_vect)
{
  c4:	1f 92       	push	r1
  c6:	0f 92       	push	r0
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	0f 92       	push	r0
  cc:	11 24       	eor	r1, r1
  ce:	8f 93       	push	r24
	PORTB = (1<<PB0);
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	88 bb       	out	0x18, r24	; 24
}
  d4:	8f 91       	pop	r24
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <__vector_6>:

ISR(TIMER1_COMPA_vect)
{
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	8f 93       	push	r24
  ec:	9f 93       	push	r25
	PORTB ^= (1<<PB0);
  ee:	98 b3       	in	r25, 0x18	; 24
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	89 27       	eor	r24, r25
  f4:	88 bb       	out	0x18, r24	; 24
	TCCR1B = 0b00000000;
  f6:	1e bc       	out	0x2e, r1	; 46
	TIFR = 0b00001000;
  f8:	88 e0       	ldi	r24, 0x08	; 8
  fa:	88 bf       	out	0x38, r24	; 56
	//TIMSK = 0b00000000;
  fc:	9f 91       	pop	r25
  fe:	8f 91       	pop	r24
 100:	0f 90       	pop	r0
 102:	0f be       	out	0x3f, r0	; 63
 104:	0f 90       	pop	r0
 106:	1f 90       	pop	r1
 108:	18 95       	reti

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
